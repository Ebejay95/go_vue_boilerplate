# Development Dockerfile mit Air Hot Reload
FROM golang:1.21-alpine

# Install protoc, protoc-gen-go und Air für Hot Reload
RUN apk add --no-cache protobuf-dev git curl unzip
RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.31.0
RUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.3.0
RUN go install github.com/cosmtrek/air@latest

# Install protoc-gen-grpc-web für Frontend Proto Generation
RUN curl -sSL https://github.com/grpc/grpc-web/releases/download/1.4.2/protoc-gen-grpc-web-1.4.2-linux-x86_64 \
	-o /usr/local/bin/protoc-gen-grpc-web && \
	chmod +x /usr/local/bin/protoc-gen-grpc-web

WORKDIR /app

# Copy server code first (including go.mod)
COPY server/ ./

# Copy proto files and generate Go code
COPY proto ./proto
RUN mkdir -p pb
RUN protoc --go_out=pb --go_opt=paths=source_relative --go-grpc_out=pb --go-grpc_opt=paths=source_relative --proto_path=proto proto/*.proto

# Initialize Go modules (aber nicht builden!)
RUN go mod tidy

# Development Environment Variables
ENV GO_ENV=development
ENV GODEBUG=netdns=go
ENV CGO_ENABLED=0

# Expose both gRPC and gRPC-Web ports
EXPOSE ${BACKEND_PORT} ${GRPC_WEB_PORT}

# Air wird die Files überwachen und neu builden
CMD ["air", "-c", ".air.toml"]
