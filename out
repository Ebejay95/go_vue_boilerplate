total 56
drwxr-xr-x@ 11 jonathaneberle  staff   352 30 Jun 16:05 .
drwxr-xr-x@ 15 jonathaneberle  staff   480 30 Jun 17:09 ..
-rw-r--r--@  1 jonathaneberle  staff  1020 30 Jun 11:29 Dockerfile
-rw-r--r--@  1 jonathaneberle  staff  1109 30 Jun 12:35 Dockerfile.dev
-rw-r--r--@  1 jonathaneberle  staff  1127 30 Jun 11:31 package.json
-rw-r--r--@  1 jonathaneberle  staff    80 30 Jun 11:22 postcss.config.js
drwxr-xr-x@  3 jonathaneberle  staff    96 30 Jun 11:21 public
-rw-r--r--@  1 jonathaneberle  staff  3277 30 Jun 11:19 server.js
drwxr-xr-x@  7 jonathaneberle  staff   224 30 Jun 17:16 src
-rw-r--r--@  1 jonathaneberle  staff   268 30 Jun 11:21 tailwind.config.js
-rw-r--r--@  1 jonathaneberle  staff  1993 30 Jun 12:34 vue.config.js

./public:
total 8
drwxr-xr-x@  3 jonathaneberle  staff   96 30 Jun 11:21 .
drwxr-xr-x@ 11 jonathaneberle  staff  352 30 Jun 16:05 ..
-rw-r--r--@  1 jonathaneberle  staff  539 30 Jun 16:04 index.html

./src:
total 32
drwxr-xr-x@  7 jonathaneberle  staff   224 30 Jun 17:16 .
drwxr-xr-x@ 11 jonathaneberle  staff   352 30 Jun 16:05 ..
-rw-r--r--@  1 jonathaneberle  staff  4733 30 Jun 16:20 App copy.vue
-rw-r--r--@  1 jonathaneberle  staff   478 30 Jun 16:48 App.vue
drwxr-xr-x@  3 jonathaneberle  staff    96 30 Jun 16:07 assets
drwxr-xr-x@  3 jonathaneberle  staff    96 30 Jun 16:26 components
-rw-r--r--@  1 jonathaneberle  staff   254 30 Jun 16:57 main.js

./src/assets:
total 0
drwxr-xr-x@ 3 jonathaneberle  staff   96 30 Jun 16:07 .
drwxr-xr-x@ 7 jonathaneberle  staff  224 30 Jun 17:16 ..
drwxr-xr-x@ 7 jonathaneberle  staff  224 30 Jun 17:12 styles

./src/assets/styles:
total 8
drwxr-xr-x@ 7 jonathaneberle  staff  224 30 Jun 17:12 .
drwxr-xr-x@ 3 jonathaneberle  staff   96 30 Jun 16:07 ..
drwxr-xr-x@ 5 jonathaneberle  staff  160 30 Jun 17:14 base
drwxr-xr-x@ 7 jonathaneberle  staff  224 30 Jun 17:15 components
-rw-r--r--@ 1 jonathaneberle  staff  608 30 Jun 17:21 index.css
drwxr-xr-x@ 5 jonathaneberle  staff  160 30 Jun 17:13 utilities
drwxr-xr-x@ 3 jonathaneberle  staff   96 30 Jun 17:15 vendor

./src/assets/styles/base:
total 32
drwxr-xr-x@ 5 jonathaneberle  staff   160 30 Jun 17:14 .
drwxr-xr-x@ 7 jonathaneberle  staff   224 30 Jun 17:12 ..
-rw-r--r--@ 1 jonathaneberle  staff   991 30 Jun 17:25 reset.css
-rw-r--r--@ 1 jonathaneberle  staff  2408 30 Jun 17:25 typography.css
-rw-r--r--@ 1 jonathaneberle  staff  4659 30 Jun 17:25 variables.css

./src/assets/styles/components:
total 48
drwxr-xr-x@ 7 jonathaneberle  staff   224 30 Jun 17:15 .
drwxr-xr-x@ 7 jonathaneberle  staff   224 30 Jun 17:12 ..
-rw-r--r--@ 1 jonathaneberle  staff  2782 30 Jun 17:25 buttons.css
-rw-r--r--@ 1 jonathaneberle  staff  2040 30 Jun 17:25 cards.css
-rw-r--r--@ 1 jonathaneberle  staff  2034 30 Jun 17:25 forms.css
-rw-r--r--@ 1 jonathaneberle  staff  3068 30 Jun 17:25 layout.css
-rw-r--r--@ 1 jonathaneberle  staff  5053 30 Jun 17:25 navigation.css

./src/assets/styles/utilities:
total 24
drwxr-xr-x@ 5 jonathaneberle  staff   160 30 Jun 17:13 .
drwxr-xr-x@ 7 jonathaneberle  staff   224 30 Jun 17:12 ..
-rw-r--r--@ 1 jonathaneberle  staff  3598 30 Jun 17:25 animations.css
-rw-r--r--@ 1 jonathaneberle  staff  2999 30 Jun 17:25 helpers.css
-rw-r--r--@ 1 jonathaneberle  staff  1400 30 Jun 17:25 spacing.css

./src/assets/styles/vendor:
total 0
drwxr-xr-x@ 3 jonathaneberle  staff   96 30 Jun 17:15 .
drwxr-xr-x@ 7 jonathaneberle  staff  224 30 Jun 17:12 ..
-rw-r--r--@ 1 jonathaneberle  staff    0 30 Jun 17:12 overrides.css

./src/components:
total 8
drwxr-xr-x@ 3 jonathaneberle  staff   96 30 Jun 16:26 .
drwxr-xr-x@ 7 jonathaneberle  staff  224 30 Jun 17:16 ..
-rw-r--r--@ 1 jonathaneberle  staff  523 30 Jun 17:26 FriendContact.vue
=== FILE CONTENTS ===
=== ./tailwind.config.js ===
/** @type {import('tailwindcss').Config} */
module.exports = {
	content: [
	  "./public/**/*.html",
	  "./src/**/*.{vue,js,ts,jsx,tsx}"
	],
	theme: {
	  extend: {
		fontFamily: {
		  sans: ['Avenir', 'Helvetica', 'Arial', 'sans-serif']
		}
	  },
	},
	plugins: [],
  }
=== ./server.js ===
const express = require('express');
const grpc = require('@grpc/grpc-js');
const protoLoader = require('@grpc/proto-loader');
const path = require('path');

const app = express();
const PORT = process.env.PORT || process.env.FRONTEND_PORT || 3000;
const GRPC_SERVER_URL = process.env.GRPC_SERVER_URL || 'localhost:50051';

console.log(`Frontend server starting on port ${PORT}`);
console.log(`Connecting to gRPC server at: ${GRPC_SERVER_URL}`);

// Load protobuf
const PROTO_PATH = path.join(__dirname, '../proto/user.proto');
const packageDefinition = protoLoader.loadSync(PROTO_PATH, {
  keepCase: true,
  longs: String,
  enums: String,
  defaults: true,
  oneofs: true,
});

// WICHTIG: user.UserService statt nur userProto.UserService
const userProto = grpc.loadPackageDefinition(packageDefinition);
const client = new userProto.user.UserService(GRPC_SERVER_URL, grpc.credentials.createInsecure());

app.use(express.json());

// CORS middleware for Vue development
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');

  if (req.method === 'OPTIONS') {
    res.sendStatus(200);
  } else {
    next();
  }
});

// Serve Vue.js build files in production
if (process.env.NODE_ENV === 'production') {
  app.use(express.static(path.join(__dirname, 'dist')));
}

// Test der gRPC-Verbindung beim Start
client.ListUsers({}, (error, response) => {
  if (error) {
    console.error('❌ gRPC connection failed:', error.message);
  } else {
    console.log('✅ gRPC connection successful');
    console.log(`Found ${response.users ? response.users.length : 0} users`);
  }
});

// API Routes
app.get('/api/users', (req, res) => {
  client.ListUsers({}, (error, response) => {
    if (error) {
      console.error('Error:', error);
      res.status(500).json({ error: error.message });
      return;
    }
    res.json(response.users || []);
  });
});

app.get('/api/users/:id', (req, res) => {
  const id = parseInt(req.params.id);
  client.GetUser({ id }, (error, response) => {
    if (error) {
      console.error('Error:', error);
      res.status(404).json({ error: error.message });
      return;
    }
    res.json(response.user);
  });
});

app.post('/api/users', (req, res) => {
  const { name, email, age } = req.body;
  client.CreateUser({ name, email, age: parseInt(age) }, (error, response) => {
    if (error) {
      console.error('Error:', error);
      res.status(500).json({ error: error.message });
      return;
    }
    res.json(response.user);
  });
});

// Health check endpoint
app.get('/api/health', (req, res) => {
  res.json({
    status: 'healthy',
    grpcServer: GRPC_SERVER_URL,
    port: PORT
  });
});

// Serve Vue app for all other routes in production
if (process.env.NODE_ENV === 'production') {
  app.get('*', (req, res) => {
    res.sendFile(path.join(__dirname, 'dist/index.html'));
  });
}

app.listen(PORT, '0.0.0.0', () => {
  console.log(`✅ Frontend server listening on port ${PORT}`);
  if (process.env.NODE_ENV !== 'production') {
    console.log(`Vue development server should be running on port 8080`);
  }
});
=== ./Dockerfile ===
# Multi-stage build for Vue.js application
FROM node:18-alpine AS build-stage

WORKDIR /app

# Copy package files first
COPY frontend/package*.json ./

# Install all dependencies (including devDependencies for build)
RUN npm install

# Copy proto files
COPY proto ../proto

# Copy ALL frontend source code (this will overwrite package.json but that's ok after npm install)
COPY frontend/ ./

# Debug: List files to verify structure
RUN echo "=== Frontend files ===" && ls -la
RUN echo "=== Source files ===" && ls -la src/

# Build Vue.js application
RUN npm run build:vue

# Production stage
FROM node:18-alpine AS production-stage

WORKDIR /app

# Copy package files first
COPY frontend/package*.json ./

# Install only production dependencies
RUN npm install --omit=dev

# Copy built Vue files and server
COPY --from=build-stage /app/dist ./dist
COPY --from=build-stage /app/server.js ./

# Copy proto files
COPY proto ../proto

# Set production environment
ENV NODE_ENV=production

EXPOSE 3000

CMD ["npm", "start"]
=== ./Dockerfile.dev ===
# Development Dockerfile für Vue.js mit GARANTIERTEM Hot Reload
FROM node:18-alpine

# Installiere curl für Health Checks
RUN apk add --no-cache curl

WORKDIR /app

# Package.json und lock files zuerst kopieren
COPY frontend/package*.json ./
RUN npm install

# Proto files kopieren
COPY proto ../proto

# Konfigurationsdateien kopieren
COPY frontend/vue.config.js ./
COPY frontend/tailwind.config.js ./
COPY frontend/postcss.config.js ./
COPY frontend/server.js ./

# Source files kopieren
COPY frontend/src ./src
COPY frontend/public ./public

# KRITISCHE Environment Variablen für File Watching
ENV NODE_ENV=development
ENV CHOKIDAR_USEPOLLING=true
ENV CHOKIDAR_INTERVAL=500
ENV WATCHPACK_POLLING=true
ENV WDS_SOCKET_HOST=0.0.0.0
ENV WDS_SOCKET_PORT=8080
ENV FAST_REFRESH=true

# Vue CLI spezifische Env Vars
ENV VUE_CLI_BABEL_TRANSPILE_MODULES=true
ENV VUE_CLI_BABEL_TARGET_NODE=true

# Ports freigeben
EXPOSE 8080 3000

# Gesundheitscheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
	CMD curl -f http://localhost:8080 || exit 1

# Default command
CMD ["npm", "run", "dev"]
=== ./public/index.html ===
<!DOCTYPE html>
<html lang="de">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="icon" href="<%= BASE_URL %>favicon.ico">
    <title>gRPC User Management - Vue.js</title>
  </head>
  <body>
    <noscript>
      <strong>We're sorry but gRPC User Management doesn't work properly without JavaScript enabled. Please enable it to continue.</strong>
    </noscript>
    <div id="app"></div>
  </body>
</html>
=== ./package.json ===
{
	"name": "grpc-vue-frontend",
	"version": "1.0.0",
	"description": "Vue.js Frontend for gRPC service",
	"main": "server.js",
	"scripts": {
	  "start": "node server.js",
	  "build": "npm run build:vue && echo 'Build completed'",
	  "build:vue": "vue-cli-service build",
	  "dev": "concurrently \"npm run serve\" \"npm run server\"",
	  "serve": "vue-cli-service serve",
	  "server": "node server.js",
	  "postinstall": "npm run lock-check || echo 'Package lock generated'",
	  "lock-check": "test -f package-lock.json"
	},
	"keywords": ["vue", "grpc", "frontend"],
	"author": "",
	"license": "ISC",
	"dependencies": {
	  "express": "^4.18.2",
	  "@grpc/grpc-js": "^1.9.0",
	  "@grpc/proto-loader": "^0.7.8",
	  "vue": "^3.3.0",
	  "axios": "^1.5.0"
	},
	"devDependencies": {
	  "@vue/cli-service": "^5.0.8",
	  "@vue/cli-plugin-router": "^5.0.8",
	  "concurrently": "^8.2.0",
	  "tailwindcss": "^3.3.0",
	  "autoprefixer": "^10.4.0",
	  "postcss": "^8.4.0",
	  "postcss-loader": "^7.3.0"
	},
	"engines": {
	  "node": ">=16.0.0",
	  "npm": ">=8.0.0"
	},
	"browserslist": [
	  "> 1%",
	  "last 2 versions",
	  "not dead"
	]
  }
=== ./vue.config.js ===
// frontend/vue.config.js - Garantiertes Hot Reload für Docker
const { defineConfig } = require('@vue/cli-service')

module.exports = defineConfig({
  transpileDependencies: true,

  devServer: {
    port: 8080,
    host: '0.0.0.0',
    allowedHosts: 'all',

    // KRITISCH: Diese müssen alle true sein
    hot: 'only',  // Nur Hot Reload, kein vollständiges Neuladen
    liveReload: false, // Deaktivieren um Konflikte zu vermeiden

    // File Watching - AGGRESSIV
    watchFiles: {
      paths: [
        'src/**/*',
        'public/**/*',
        '*.js',
        '*.json',
        '*.vue'
      ],
      options: {
        usePolling: true,     // MUSS true sein für Docker
        interval: 500,        // Schnell genug
        ignored: ['**/node_modules/**', '**/.git/**']
      }
    },

    // WebSocket Konfiguration
    client: {
      webSocketURL: {
        hostname: '0.0.0.0',
        pathname: '/ws',
        port: 8080,
        protocol: 'ws'
      },
      overlay: {
        errors: true,
        warnings: false,
        runtimeErrors: false
      },
      progress: false,
      reconnect: 3
    },

    // Zusätzliche Headers
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': '*',
      'Access-Control-Allow-Headers': '*'
    },

    // Proxy
    proxy: {
      '/api': {
        target: 'http://localhost:3000',
        changeOrigin: true
      }
    }
  },

  // Webpack Konfiguration für File Watching
  configureWebpack: config => {
    if (process.env.NODE_ENV === 'development') {
      config.watchOptions = {
        poll: 500,
        aggregateTimeout: 200,
        ignored: /node_modules/
      }

      // Ensure HMR is enabled
      config.devtool = 'eval-cheap-module-source-map'
    }
  },

  css: {
    loaderOptions: {
      postcss: {
        postcssOptions: {
          plugins: [
            require('tailwindcss'),
            require('autoprefixer'),
          ],
        },
      },
    },
  }
})
=== ./postcss.config.js ===
module.exports = {
	plugins: {
	  tailwindcss: {},
	  autoprefixer: {},
	},
  }
=== ./src/App.vue ===
<template>
	<section>
	  <h2>My friends</h2>
	  <friend-contact
		v-for="friend in friends"
		:key="friend.id"
		:friend="friend">
	  </friend-contact>
	</section>
  </template>

  <script>
  export default {
	data() {
	  return {
		friends: [
		  {
			id: 'manuel',
			name: 'Manuel',
			phone: '123-456-789',
			email: 'manuel@example.com'
		  },
		  {
			id: 'julie',
			name: 'Julie',
			phone: '987-654-321',
			email: 'julie@example.com'
		  }
		]
	  }
	}
  }
  </script>
=== ./src/main.js ===
import { createApp } from 'vue'
import App from './App.vue'
import './../src/assets/styles/index.css'
import FriendContact from './components/FriendContact.vue'

const app = createApp(App)
app.component('friend-contact', FriendContact)
app.mount('#app')
=== ./src/components/FriendContact.vue ===
<template>
	<li>
	  <h2>{{ friend.name }}</h2>
	  <button @click="toggleDetails" class="btn">Show Details</button>
	  <ul v-if="detailsAreVisible">
		<li><strong>Phone:</strong> {{ friend.phone }}</li>
		<li><strong>Email:</strong> {{ friend.email }}</li>
	  </ul>
	</li>
  </template>

  <script>
  export default {
	props: ['friend'], // Props definieren
	data() {
	  return {
		detailsAreVisible: false
	  }
	},
	methods: {
	  toggleDetails() {
		this.detailsAreVisible = !this.detailsAreVisible
	  }
	}
  }
  </script>
=== ./src/App copy.vue ===
<template>
	<div id="app">
	  <div class="container">

		<!-- User Creation Form -->
		<div class="form-section">
		  <h2>Neuen asdasd</h2>

		  <form @submit.prevent="createUser" class="user-form">
			<div class="form-group">
			  <label for="name">Name</label>
			  <input
				type="text"
				id="name"
				v-model="newUser.name"
				required
				placeholder="Name eingeben"
			  />
			</div>

			<div class="form-group">
			  <label for="email">Email</label>
			  <input
				type="email"
				id="email"
				v-model="newUser.email"
				required
				placeholder="email@example.com"
			  />
			</div>

			<div class="form-group">
			  <label for="age">Alter</label>
			  <input
				type="number"
				id="age"
				v-model.number="newUser.age"
				required
				min="1"
				max="150"
				placeholder="25"
			  />
			</div>

			<button
			  type="submit"
			  :disabled="isCreating"
			  class="btn btn-primary"
			>
			  <span v-if="isCreating">Erstelle User...</span>
			  <span v-else>User erstellen</span>
			</button>
		  </form>
		</div>

		<!-- Users Table -->
		<div class="table-section">
		  <div class="table-header">
			<h2>Alle Users</h2>
			<button
			  @click="loadUsers"
			  :disabled="isLoading"
			  class="btn btn-secondary"
			>
			  <span v-if="isLoading">Laden...</span>
			  <span v-else>Users laden</span>
			</button>
		  </div>

		  <!-- Loading State -->
		  <div v-if="isLoading" class="loading">
			<div class="spinner"></div>
		  </div>

		  <!-- Error State -->
		  <div v-else-if="error" class="error-message">
			<p>{{ error }}</p>
		  </div>

		  <!-- Users Table -->
		  <div v-else class="table-container">
			<table class="users-table">
			  <thead>
				<tr>
				  <th>ID</th>
				  <th>Name</th>
				  <th>Email</th>
				  <th>Alter</th>
				  <th>Role</th>
				</tr>
			  </thead>
			  <tbody>
				<tr v-if="users.length === 0">
				  <td colspan="4" class="no-data">
					Keine Users gefunden
				  </td>
				</tr>
				<tr v-for="user in users" :key="user.id">
				  <td>{{ user.id }}</td>
				  <td>{{ user.name }}</td>
				  <td>{{ user.email }}</td>
				  <td>{{ user.age }}</td>
				  <td>{{ user.role }}</td>
				</tr>
			  </tbody>
			</table>
		  </div>
		</div>

		<!-- Success/Error Messages -->
		<div v-if="message" class="toast" :class="messageType">
		  <p>{{ message }}</p>
		</div>
	  </div>
	</div>
  </template>

  <script>
  import { ref, reactive, onMounted } from 'vue'
  import axios from 'axios'

  export default {
	name: 'App',
	setup() {
	  const users = ref([])
	  const isLoading = ref(false)
	  const isCreating = ref(false)
	  const error = ref('')
	  const message = ref('')
	  const messageType = ref('success')

	  const newUser = reactive({
		name: '',
		email: '',
		age: ''
	  })

	  const serverStatus = reactive({
		port: process.env.NODE_ENV === 'production' ? 3000 : 8080,
		grpcServer: 'localhost:50051'
	  })

	  const API_BASE = process.env.NODE_ENV === 'production' ? '' : 'http://localhost:3000'

	  const showMessage = (msg, type = 'success') => {
		message.value = msg
		messageType.value = type
		setTimeout(() => {
		  message.value = ''
		}, 3000)
	  }

	  const loadUsers = async () => {
		isLoading.value = true
		error.value = ''

		try {
		  const response = await axios.get(`${API_BASE}/api/users`)
		  users.value = response.data
		} catch (err) {
		  error.value = `Fehler beim Laden der Users: ${err.response?.data?.error || err.message}`
		  console.error('Error loading users:', err)
		} finally {
		  isLoading.value = false
		}
	  }

	  const createUser = async () => {
		isCreating.value = true

		try {
		  const response = await axios.post(`${API_BASE}/api/users`, {
			name: newUser.name,
			email: newUser.email,
			age: parseInt(newUser.age)
		  })

		  // Reset form
		  newUser.name = ''
		  newUser.email = ''
		  newUser.age = ''

		  // Reload users and show success message
		  await loadUsers()
		  showMessage('User erfolgreich erstellt!', 'success')
		} catch (err) {
		  const errorMsg = err.response?.data?.error || err.message
		  showMessage(`Fehler beim Erstellen des Users: ${errorMsg}`, 'error')
		  console.error('Error creating user:', err)
		} finally {
		  isCreating.value = false
		}
	  }

	  const loadServerStatus = async () => {
		try {
		  const response = await axios.get(`${API_BASE}/api/health`)
		  serverStatus.port = response.data.port
		  serverStatus.grpcServer = response.data.grpcServer
		} catch (err) {
		  console.warn('Could not load server status:', err)
		}
	  }

	  onMounted(() => {
		loadUsers()
		loadServerStatus()
	  })

	  return {
		users,
		isLoading,
		isCreating,
		error,
		message,
		messageType,
		newUser,
		serverStatus,
		loadUsers,
		createUser
	  }
	}
  }
  </script>
=== ./src/assets/styles/index.css ===
/* ===== MAIN STYLES INDEX.CSS ===== */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom base styles */
@import './base/variables.css';
@import './base/reset.css';
@import './base/typography.css';

/* Component styles */
@import './components/layout.css';
@import './components/buttons.css';
@import './components/cards.css';
@import './components/forms.css';
@import './components/navigation.css';

/* Utility styles */
@import './utilities/animations.css';
@import './utilities/spacing.css';
@import './utilities/helpers.css';

/* Vendor overrides */
@import './vendor/overrides.css';
=== ./src/assets/styles/utilities/spacing.css ===
/* ===== UTILITIES/SPACING.CSS ===== */
@tailwind utilities {
	/* Custom spacing utilities */
	.space-y-xs > * + * {
	  margin-top: var(--spacing-xs);
	}

	.space-y-sm > * + * {
	  margin-top: var(--spacing-sm);
	}

	.space-y-md > * + * {
	  margin-top: var(--spacing-md);
	}

	.space-y-lg > * + * {
	  margin-top: var(--spacing-lg);
	}

	.space-y-xl > * + * {
	  margin-top: var(--spacing-xl);
	}

	.space-x-xs > * + * {
	  margin-left: var(--spacing-xs);
	}

	.space-x-sm > * + * {
	  margin-left: var(--spacing-sm);
	}

	.space-x-md > * + * {
	  margin-left: var(--spacing-md);
	}

	.space-x-lg > * + * {
	  margin-left: var(--spacing-lg);
	}

	.space-x-xl > * + * {
	  margin-left: var(--spacing-xl);
	}

	/* Container utilities */
	.container-xs {
	  max-width: 475px;
	  margin: 0 auto;
	  padding: 0 var(--spacing-md);
	}

	.container-sm {
	  max-width: 640px;
	  margin: 0 auto;
	  padding: 0 var(--spacing-md);
	}

	.container-md {
	  max-width: 768px;
	  margin: 0 auto;
	  padding: 0 var(--spacing-md);
	}

	.container-lg {
	  max-width: 1024px;
	  margin: 0 auto;
	  padding: 0 var(--spacing-md);
	}

	.container-xl {
	  max-width: 1280px;
	  margin: 0 auto;
	  padding: 0 var(--spacing-md);
	}

	/* Section spacing */
	.section-padding {
	  padding: var(--spacing-3xl) 0;
	}

	.section-padding-sm {
	  padding: var(--spacing-2xl) 0;
	}

	.section-padding-lg {
	  padding: 6rem 0;
	}
  }
=== ./src/assets/styles/utilities/animations.css ===
/* ===== UTILITIES/ANIMATIONS.CSS ===== */
@tailwind utilities {
	/* Fade animations */
	.animate-fade-in {
	  animation: fadeIn 0.3s ease-out;
	}

	.animate-fade-out {
	  animation: fadeOut 0.3s ease-out;
	}

	/* Slide animations */
	.animate-slide-down {
	  animation: slideDown 0.3s ease-out;
	}

	.animate-slide-up {
	  animation: slideUp 0.3s ease-out;
	}

	.animate-slide-in-left {
	  animation: slideInLeft 0.3s ease-out;
	}

	.animate-slide-in-right {
	  animation: slideInRight 0.3s ease-out;
	}

	/* Scale animations */
	.animate-scale-in {
	  animation: scaleIn 0.2s ease-out;
	}

	.animate-scale-out {
	  animation: scaleOut 0.2s ease-out;
	}

	/* Bounce animations */
	.animate-bounce-in {
	  animation: bounceIn 0.6s ease-out;
	}

	/* Rotation animations */
	.animate-rotate-in {
	  animation: rotateIn 0.4s ease-out;
	}

	/* Hover animations */
	.hover-lift {
	  transition: transform var(--transition-normal) ease;
	}

	.hover-lift:hover {
	  transform: translateY(-4px);
	}

	.hover-grow {
	  transition: transform var(--transition-normal) ease;
	}

	.hover-grow:hover {
	  transform: scale(1.05);
	}

	.hover-glow {
	  transition: box-shadow var(--transition-normal) ease;
	}

	.hover-glow:hover {
	  box-shadow: 0 0 20px rgba(59, 130, 246, 0.4);
	}

	/* Loading animations */
	.animate-pulse-slow {
	  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
	}

	.animate-spin-slow {
	  animation: spin 2s linear infinite;
	}

	.animate-float {
	  animation: float 3s ease-in-out infinite;
	}

	/* Scroll animations */
	.animate-slide-in-viewport {
	  opacity: 0;
	  transform: translateY(20px);
	  transition: all 0.6s ease-out;
	}

	.animate-slide-in-viewport.in-view {
	  opacity: 1;
	  transform: translateY(0);
	}

	/* Text animations */
	.animate-typewriter {
	  overflow: hidden;
	  border-right: 2px solid var(--color-primary-600);
	  white-space: nowrap;
	  animation: typewriter 4s steps(40, end), blink-caret 0.75s step-end infinite;
	}
  }
/* Keyframes */
@keyframes fadeIn {
	from { opacity: 0; }
	to { opacity: 1; }
  }

  @keyframes fadeOut {
	from { opacity: 1; }
	to { opacity: 0; }
  }

  @keyframes slideDown {
	from {
	  opacity: 0;
	  transform: translateY(-20px);
	}
	to {
	  opacity: 1;
	  transform: translateY(0);
	}
  }

  @keyframes slideUp {
	from {
	  opacity: 0;
	  transform: translateY(20px);
	}
	to {
	  opacity: 1;
	  transform: translateY(0);
	}
  }

  @keyframes slideInLeft {
	from {
	  opacity: 0;
	  transform: translateX(-30px);
	}
	to {
	  opacity: 1;
	  transform: translateX(0);
	}
  }

  @keyframes slideInRight {
	from {
	  opacity: 0;
	  transform: translateX(30px);
	}
	to {
	  opacity: 1;
	  transform: translateX(0);
	}
  }

  @keyframes scaleIn {
	from {
	  opacity: 0;
	  transform: scale(0.8);
	}
	to {
	  opacity: 1;
	  transform: scale(1);
	}
  }

  @keyframes scaleOut {
	from {
	  opacity: 1;
	  transform: scale(1);
	}
	to {
	  opacity: 0;
	  transform: scale(0.8);
	}
  }

  @keyframes bounceIn {
	0% {
	  opacity: 0;
	  transform: scale(0.3);
	}
	50% {
	  opacity: 1;
	  transform: scale(1.1);
	}
	100% {
	  opacity: 1;
	  transform: scale(1);
	}
  }

  @keyframes rotateIn {
	from {
	  opacity: 0;
	  transform: rotate(-90deg) scale(0.8);
	}
	to {
	  opacity: 1;
	  transform: rotate(0deg) scale(1);
	}
  }

  @keyframes float {
	0%, 100% {
	  transform: translateY(0px);
	}
	50% {
	  transform: translateY(-10px);
	}
  }

  @keyframes typewriter {
	from { width: 0; }
	to { width: 100%; }
  }

  @keyframes blink-caret {
	from, to { border-color: transparent; }
	50% { border-color: var(--color-primary-600); }
  }
=== ./src/assets/styles/utilities/helpers.css ===
/* ===== UTILITIES/HELPERS.CSS ===== */
@tailwind utilities {
	/* Visibility helpers */
	.sr-only {
	  position: absolute;
	  width: 1px;
	  height: 1px;
	  padding: 0;
	  margin: -1px;
	  overflow: hidden;
	  clip: rect(0, 0, 0, 0);
	  white-space: nowrap;
	  border: 0;
	}

	.not-sr-only {
	  position: static;
	  width: auto;
	  height: auto;
	  padding: 0;
	  margin: 0;
	  overflow: visible;
	  clip: auto;
	  white-space: normal;
	}

	/* Focus helpers */
	.focus-visible {
	  outline: 2px solid var(--color-primary-500);
	  outline-offset: 2px;
	}

	/* Scrollbar styling */
	.scrollbar-thin {
	  scrollbar-width: thin;
	  scrollbar-color: var(--color-neutral-400) var(--color-neutral-100);
	}

	.scrollbar-thin::-webkit-scrollbar {
	  width: 6px;
	  height: 6px;
	}

	.scrollbar-thin::-webkit-scrollbar-track {
	  background: var(--color-neutral-100);
	}

	.scrollbar-thin::-webkit-scrollbar-thumb {
	  background: var(--color-neutral-400);
	  border-radius: var(--radius-full);
	}

	.scrollbar-thin::-webkit-scrollbar-thumb:hover {
	  background: var(--color-neutral-500);
	}

	/* Text utilities */
	.text-balance {
	  text-wrap: balance;
	}

	.text-pretty {
	  text-wrap: pretty;
	}

	/* Gradient text */
	.text-gradient {
	  background: linear-gradient(135deg, var(--color-primary-600), var(--color-accent-600));
	  -webkit-background-clip: text;
	  -webkit-text-fill-color: transparent;
	  background-clip: text;
	}

	/* Glass effect */
	.glass {
	  background: rgba(255, 255, 255, 0.1);
	  backdrop-filter: blur(10px);
	  border: 1px solid rgba(255, 255, 255, 0.2);
	}

	.glass-dark {
	  background: rgba(0, 0, 0, 0.1);
	  backdrop-filter: blur(10px);
	  border: 1px solid rgba(255, 255, 255, 0.1);
	}

	/* Aspect ratio utilities */
	.aspect-square {
	  aspect-ratio: 1 / 1;
	}

	.aspect-video {
	  aspect-ratio: 16 / 9;
	}

	.aspect-photo {
	  aspect-ratio: 4 / 3;
	}

	/* Image utilities */
	.image-fit {
	  object-fit: cover;
	  object-position: center;
	}

	/* Grid helpers */
	.grid-auto-fit {
	  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
	}

	.grid-auto-fill {
	  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
	}

	/* Flex helpers */
	.flex-center {
	  display: flex;
	  align-items: center;
	  justify-content: center;
	}

	.flex-between {
	  display: flex;
	  align-items: center;
	  justify-content: space-between;
	}

	.flex-around {
	  display: flex;
	  align-items: center;
	  justify-content: space-around;
	}

	.flex-evenly {
	  display: flex;
	  align-items: center;
	  justify-content: space-evenly;
	}

	/* Position helpers */
	.absolute-center {
	  position: absolute;
	  top: 50%;
	  left: 50%;
	  transform: translate(-50%, -50%);
	}

	.absolute-center-x {
	  position: absolute;
	  left: 50%;
	  transform: translateX(-50%);
	}

	.absolute-center-y {
	  position: absolute;
	  top: 50%;
	  transform: translateY(-50%);
	}

	/* Debug helpers */
	.debug {
	  outline: 1px solid red;
	}

	.debug * {
	  outline: 1px solid blue;
	}
  }
=== ./src/assets/styles/components/forms.css ===
/* ===== COMPONENTS/FORMS.CSS ===== */
@tailwind components {
	.form-group {
	  margin-bottom: var(--spacing-lg);
	}

	.form-label {
	  display: block;
	  font-size: var(--font-size-sm);
	  font-weight: var(--font-weight-medium);
	  color: var(--color-text-primary);
	  margin-bottom: var(--spacing-xs);
	}

	.form-input,
	.form-textarea,
	.form-select {
	  @apply w-full px-3 py-2 border rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2;
	  border-color: var(--color-border);
	  background-color: var(--color-bg-primary);
	  color: var(--color-text-primary);
	}

	.form-input:focus,
	.form-textarea:focus,
	.form-select:focus {
	  border-color: var(--color-primary-500);
	  --tw-ring-color: var(--color-primary-500);
	}

	.form-input:disabled,
	.form-textarea:disabled,
	.form-select:disabled {
	  @apply opacity-50 cursor-not-allowed;
	  background-color: var(--color-bg-secondary);
	}

	.form-error {
	  border-color: var(--color-error-500);
	}

	.form-error:focus {
	  border-color: var(--color-error-500);
	  --tw-ring-color: var(--color-error-500);
	}

	.form-help-text {
	  font-size: var(--font-size-sm);
	  color: var(--color-text-secondary);
	  margin-top: var(--spacing-xs);
	}

	.form-error-text {
	  font-size: var(--font-size-sm);
	  color: var(--color-error-600);
	  margin-top: var(--spacing-xs);
	}

	.form-checkbox,
	.form-radio {
	  @apply w-4 h-4 border border-gray-300 rounded focus:ring-2 focus:ring-offset-2;
	  accent-color: var(--color-primary-600);
	}

	.form-switch {
	  @apply relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2;
	  background-color: var(--color-neutral-300);
	}

	.form-switch:checked {
	  background-color: var(--color-primary-600);
	}

	.form-switch::before {
	  @apply inline-block h-4 w-4 transform rounded-full bg-white transition-transform;
	  content: '';
	  transform: translateX(2px);
	}

	.form-switch:checked::before {
	  transform: translateX(24px);
	}
  }
=== ./src/assets/styles/components/navigation.css ===
/* ===== COMPONENTS/NAVIGATION.CSS ===== */
@tailwind components {
	/* Navigation bar */
	.navbar {
	  @apply flex items-center justify-between;
	  padding: var(--spacing-md) 0;
	}

	.navbar-brand {
	  font-size: var(--font-size-xl);
	  font-weight: var(--font-weight-bold);
	  color: var(--color-text-primary);
	  text-decoration: none;
	}

	.navbar-nav {
	  @apply flex items-center;
	  gap: var(--spacing-lg);
	}

	.navbar-item {
	  color: var(--color-text-secondary);
	  text-decoration: none;
	  font-weight: var(--font-weight-medium);
	  padding: var(--spacing-sm) var(--spacing-md);
	  border-radius: var(--radius-md);
	  transition: all var(--transition-fast) ease;
	}

	.navbar-item:hover,
	.navbar-item.active {
	  color: var(--color-primary-600);
	  background-color: var(--color-primary-50);
	}

	/* Mobile menu */
	.mobile-menu-button {
	  @apply md:hidden p-2 rounded-md;
	  color: var(--color-text-secondary);
	  background: none;
	  border: none;
	}

	.mobile-menu-button:hover {
	  background-color: var(--color-bg-secondary);
	  color: var(--color-text-primary);
	}

	.mobile-menu {
	  @apply absolute top-full left-0 right-0 md:hidden;
	  background-color: var(--color-bg-primary);
	  border-top: 1px solid var(--color-border);
	  padding: var(--spacing-md);
	  box-shadow: var(--shadow-lg);
	}

	.mobile-menu-item {
	  display: block;
	  padding: var(--spacing-md);
	  color: var(--color-text-secondary);
	  text-decoration: none;
	  border-radius: var(--radius-md);
	  margin-bottom: var(--spacing-xs);
	}

	.mobile-menu-item:hover,
	.mobile-menu-item.active {
	  color: var(--color-primary-600);
	  background-color: var(--color-primary-50);
	}

	/* Breadcrumbs */
	.breadcrumb {
	  @apply flex items-center;
	  gap: var(--spacing-sm);
	  color: var(--color-text-secondary);
	  font-size: var(--font-size-sm);
	}

	.breadcrumb-item {
	  @apply flex items-center;
	  gap: var(--spacing-sm);
	}

	.breadcrumb-item:not(:last-child)::after {
	  content: '/';
	  color: var(--color-text-secondary);
	  opacity: 0.5;
	}

	.breadcrumb-link {
	  color: var(--color-text-secondary);
	  text-decoration: none;
	  transition: color var(--transition-fast) ease;
	}

	.breadcrumb-link:hover {
	  color: var(--color-primary-600);
	}

	/* Tabs */
	.tabs {
	  border-bottom: 1px solid var(--color-border);
	}

	.tab-list {
	  @apply flex;
	  gap: var(--spacing-lg);
	}

	.tab-button {
	  @apply relative px-4 py-2;
	  color: var(--color-text-secondary);
	  background: none;
	  border: none;
	  font-weight: var(--font-weight-medium);
	  cursor: pointer;
	  transition: color var(--transition-fast) ease;
	}

	.tab-button:hover {
	  color: var(--color-text-primary);
	}

	.tab-button.active {
	  color: var(--color-primary-600);
	}

	.tab-button.active::after {
	  content: '';
	  @apply absolute bottom-0 left-0 right-0;
	  height: 2px;
	  background-color: var(--color-primary-600);
	}

	.tab-panel {
	  padding: var(--spacing-lg) 0;
	}

	/* Pagination */
	.pagination {
	  @apply flex items-center justify-center;
	  gap: var(--spacing-sm);
	}

	.pagination-item {
	  @apply flex items-center justify-center w-10 h-10;
	  border: 1px solid var(--color-border);
	  border-radius: var(--radius-md);
	  color: var(--color-text-secondary);
	  text-decoration: none;
	  font-weight: var(--font-weight-medium);
	  transition: all var(--transition-fast) ease;
	}

	.pagination-item:hover {
	  background-color: var(--color-bg-secondary);
	  color: var(--color-text-primary);
	}

	.pagination-item.active {
	  background-color: var(--color-primary-600);
	  color: white;
	  border-color: var(--color-primary-600);
	}

	.pagination-item:disabled {
	  opacity: 0.5;
	  cursor: not-allowed;
	}

	/* Dropdown */
	.dropdown {
	  @apply relative inline-block;
	}

	.dropdown-toggle {
	  @apply flex items-center gap-2 px-4 py-2;
	  background: none;
	  border: 1px solid var(--color-border);
	  border-radius: var(--radius-md);
	  color: var(--color-text-primary);
	  cursor: pointer;
	  transition: all var(--transition-fast) ease;
	}

	.dropdown-toggle:hover {
	  background-color: var(--color-bg-secondary);
	}

	.dropdown-menu {
	  @apply absolute top-full left-0 mt-1 min-w-full;
	  background-color: var(--color-bg-primary);
	  border: 1px solid var(--color-border);
	  border-radius: var(--radius-md);
	  box-shadow: var(--shadow-lg);
	  z-index: 50;
	  opacity: 0;
	  visibility: hidden;
	  transform: translateY(-10px);
	  transition: all var(--transition-fast) ease;
	}

	.dropdown.open .dropdown-menu {
	  opacity: 1;
	  visibility: visible;
	  transform: translateY(0);
	}

	.dropdown-item {
	  @apply block px-4 py-2;
	  color: var(--color-text-secondary);
	  text-decoration: none;
	  transition: background-color var(--transition-fast) ease;
	}

	.dropdown-item:hover {
	  background-color: var(--color-bg-secondary);
	  color: var(--color-text-primary);
	}

	.dropdown-item:first-child {
	  border-radius: var(--radius-md) var(--radius-md) 0 0;
	}

	.dropdown-item:last-child {
	  border-radius: 0 0 var(--radius-md) var(--radius-md);
	}
  }
=== ./src/assets/styles/components/layout.css ===
/* ===== COMPONENTS/LAYOUT.CSS ===== */
@tailwind components {
	/* Main layout components */
	.layout {
	  min-height: 100vh;
	  display: flex;
	  flex-direction: column;
	}

	.layout-header {
	  background-color: var(--color-bg-primary);
	  border-bottom: 1px solid var(--color-border);
	  padding: var(--spacing-md) 0;
	  position: sticky;
	  top: 0;
	  z-index: 50;
	  backdrop-filter: blur(8px);
	}

	.layout-main {
	  flex: 1;
	  padding: var(--spacing-xl) 0;
	}

	.layout-sidebar {
	  width: 250px;
	  background-color: var(--color-bg-secondary);
	  border-right: 1px solid var(--color-border);
	  padding: var(--spacing-lg);
	}

	.layout-content {
	  flex: 1;
	  padding: var(--spacing-lg);
	}

	.layout-footer {
	  background-color: var(--color-bg-secondary);
	  border-top: 1px solid var(--color-border);
	  padding: var(--spacing-xl) 0;
	  margin-top: auto;
	}

	/* Grid layouts */
	.grid-layout {
	  display: grid;
	  gap: var(--spacing-lg);
	}

	.grid-layout-2 {
	  grid-template-columns: repeat(2, 1fr);
	}

	.grid-layout-3 {
	  grid-template-columns: repeat(3, 1fr);
	}

	.grid-layout-4 {
	  grid-template-columns: repeat(4, 1fr);
	}

	/* Responsive grid */
	.grid-responsive {
	  display: grid;
	  gap: var(--spacing-lg);
	  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
	}

	/* Section layouts */
	.section {
	  padding: var(--spacing-3xl) 0;
	}

	.section-hero {
	  padding: 6rem 0;
	  background: linear-gradient(135deg, var(--color-primary-50), var(--color-accent-50));
	}

	.section-feature {
	  padding: var(--spacing-3xl) 0;
	  background-color: var(--color-bg-secondary);
	}

	/* Content wrappers */
	.content-wrapper {
	  max-width: 1200px;
	  margin: 0 auto;
	  padding: 0 var(--spacing-md);
	}

	.content-narrow {
	  max-width: 800px;
	  margin: 0 auto;
	  padding: 0 var(--spacing-md);
	}

	.content-wide {
	  max-width: 1400px;
	  margin: 0 auto;
	  padding: 0 var(--spacing-md);
	}

	/* Sidebar layouts */
	.sidebar-layout {
	  display: grid;
	  grid-template-columns: 250px 1fr;
	  gap: var(--spacing-xl);
	  min-height: 100vh;
	}

	.sidebar-layout-right {
	  display: grid;
	  grid-template-columns: 1fr 250px;
	  gap: var(--spacing-xl);
	  min-height: 100vh;
	}

	/* Stack layouts */
	.stack > * + * {
	  margin-top: var(--spacing-md);
	}

	.stack-sm > * + * {
	  margin-top: var(--spacing-sm);
	}

	.stack-lg > * + * {
	  margin-top: var(--spacing-lg);
	}

	.stack-xl > * + * {
	  margin-top: var(--spacing-xl);
	}

	/* Cluster layouts */
	.cluster {
	  display: flex;
	  flex-wrap: wrap;
	  gap: var(--spacing-md);
	  align-items: center;
	}

	.cluster-center {
	  justify-content: center;
	}

	.cluster-end {
	  justify-content: flex-end;
	}

	/* Media responsive */
	@media (max-width: 768px) {
	  .grid-layout-2,
	  .grid-layout-3,
	  .grid-layout-4 {
		grid-template-columns: 1fr;
	  }

	  .sidebar-layout,
	  .sidebar-layout-right {
		grid-template-columns: 1fr;
	  }

	  .layout-sidebar {
		width: 100%;
	  }

	  .section-hero {
		padding: 3rem 0;
	  }

	  .section {
		padding: var(--spacing-2xl) 0;
	  }
	}
  }
=== ./src/assets/styles/components/buttons.css ===
/* ===== COMPONENTS/BUTTONS.CSS ===== */
@tailwind components {
	.btn {
	  @apply inline-flex items-center justify-center gap-2 px-4 py-2 border border-transparent rounded-lg font-medium text-sm transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed;
	  box-shadow: var(--shadow-sm);
	}

	/* Button sizes */
	.btn-xs {
	  @apply px-2 py-1 text-xs;
	}

	.btn-sm {
	  @apply px-3 py-1.5 text-sm;
	}

	.btn-lg {
	  @apply px-6 py-3 text-base;
	}

	.btn-xl {
	  @apply px-8 py-4 text-lg;
	}

	/* Primary variants */
	.btn-primary {
	  background-color: var(--color-primary-600);
	  color: white;
	}

	.btn-primary:hover {
	  background-color: var(--color-primary-700);
	  box-shadow: var(--shadow-md);
	}

	.btn-primary:focus {
	  --tw-ring-color: var(--color-primary-500);
	}

	/* Secondary variants */
	.btn-secondary {
	  background-color: var(--color-secondary-600);
	  color: white;
	}

	.btn-secondary:hover {
	  background-color: var(--color-secondary-700);
	  box-shadow: var(--shadow-md);
	}

	/* Accent variants */
	.btn-accent {
	  background-color: var(--color-accent-600);
	  color: white;
	}

	.btn-accent:hover {
	  background-color: var(--color-accent-700);
	  box-shadow: var(--shadow-md);
	}

	/* Status variants */
	.btn-success {
	  background-color: var(--color-success-600);
	  color: white;
	}

	.btn-success:hover {
	  background-color: var(--color-success-700);
	}

	.btn-warning {
	  background-color: var(--color-warning-600);
	  color: white;
	}

	.btn-warning:hover {
	  background-color: var(--color-warning-700);
	}

	.btn-error {
	  background-color: var(--color-error-600);
	  color: white;
	}

	.btn-error:hover {
	  background-color: var(--color-error-700);
	}

	/* Outline variants */
	.btn-outline {
	  @apply bg-transparent border-2;
	  color: var(--color-text-primary);
	  border-color: var(--color-border);
	}

	.btn-outline:hover {
	  background-color: var(--color-bg-secondary);
	}

	.btn-outline-primary {
	  @apply btn-outline;
	  border-color: var(--color-primary-600);
	  color: var(--color-primary-600);
	}

	.btn-outline-primary:hover {
	  background-color: var(--color-primary-600);
	  color: white;
	}

	/* Ghost variants */
	.btn-ghost {
	  @apply bg-transparent border-transparent;
	  color: var(--color-text-secondary);
	}

	.btn-ghost:hover {
	  background-color: var(--color-bg-secondary);
	  color: var(--color-text-primary);
	}

	/* Icon button */
	.btn-icon {
	  @apply p-2 rounded-full;
	  min-width: auto;
	}

	/* Loading state */
	.btn-loading {
	  @apply cursor-not-allowed;
	  opacity: 0.7;
	}

	.btn-loading::before {
	  content: "";
	  @apply inline-block w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin mr-2;
	}
  }
=== ./src/assets/styles/components/cards.css ===
/* ===== COMPONENTS/CARDS.CSS ===== */
@tailwind components {
	.card {
	  background-color: var(--color-bg-primary);
	  border: 1px solid var(--color-border);
	  border-radius: var(--radius-lg);
	  box-shadow: var(--shadow-md);
	  overflow: hidden;
	  transition: all var(--transition-normal) ease;
	}

	.card:hover {
	  box-shadow: var(--shadow-lg);
	}

	.card-header {
	  padding: var(--spacing-lg);
	  border-bottom: 1px solid var(--color-border);
	  background-color: var(--color-bg-secondary);
	}

	.card-body {
	  padding: var(--spacing-lg);
	}

	.card-footer {
	  padding: var(--spacing-lg);
	  border-top: 1px solid var(--color-border);
	  background-color: var(--color-bg-secondary);
	}

	.card-title {
	  font-size: var(--font-size-xl);
	  font-weight: var(--font-weight-semibold);
	  color: var(--color-text-primary);
	  margin-bottom: var(--spacing-xs);
	}

	.card-subtitle {
	  font-size: var(--font-size-sm);
	  color: var(--color-text-secondary);
	}

	/* Card variants */
	.card-elevated {
	  box-shadow: var(--shadow-xl);
	}

	.card-flat {
	  box-shadow: none;
	  border: 2px solid var(--color-border);
	}

	.card-interactive {
	  @apply cursor-pointer;
	  transition: all var(--transition-normal) ease;
	}

	.card-interactive:hover {
	  transform: translateY(-2px);
	  box-shadow: var(--shadow-xl);
	}

	/* Colored cards */
	.card-primary {
	  border-color: var(--color-primary-200);
	  background-color: var(--color-primary-50);
	}

	.card-success {
	  border-color: var(--color-success-200);
	  background-color: var(--color-success-50);
	}

	.card-warning {
	  border-color: var(--color-warning-200);
	  background-color: var(--color-warning-50);
	}

	.card-error {
	  border-color: var(--color-error-200);
	  background-color: var(--color-error-50);
	}

	/* Card layouts */
	.card-horizontal {
	  @apply flex;
	}

	.card-horizontal .card-body {
	  @apply flex-1;
	}

	/* Card image */
	.card-image {
	  @apply w-full h-48 object-cover;
	}

	.card-image-sm {
	  @apply h-32;
	}

	.card-image-lg {
	  @apply h-64;
	}
  }
=== ./src/assets/styles/base/typography.css ===
/* ===== BASE/TYPOGRAPHY.CSS ===== */
@tailwind base {
	h1, h2, h3, h4, h5, h6 {
	  font-weight: var(--font-weight-bold);
	  line-height: var(--line-height-tight);
	  color: var(--color-text-primary);
	  margin-bottom: var(--spacing-md);
	}

	h1 {
	  font-size: var(--font-size-4xl);
	  margin-bottom: var(--spacing-xl);
	}

	h2 {
	  font-size: var(--font-size-3xl);
	  margin-bottom: var(--spacing-lg);
	}

	h3 {
	  font-size: var(--font-size-2xl);
	  margin-bottom: var(--spacing-md);
	}

	h4 {
	  font-size: var(--font-size-xl);
	  margin-bottom: var(--spacing-sm);
	}

	h5 {
	  font-size: var(--font-size-lg);
	  margin-bottom: var(--spacing-sm);
	}

	h6 {
	  font-size: var(--font-size-base);
	  margin-bottom: var(--spacing-xs);
	}

	p {
	  margin-bottom: var(--spacing-md);
	  line-height: var(--line-height-relaxed);
	  color: var(--color-text-secondary);
	}

	a {
	  color: var(--color-primary-600);
	  transition: color var(--transition-fast) ease;
	}

	a:hover {
	  color: var(--color-primary-700);
	}

	strong, b {
	  font-weight: var(--font-weight-semibold);
	}

	em, i {
	  font-style: italic;
	}

	small {
	  font-size: var(--font-size-sm);
	}

	code {
	  font-family: ui-monospace, SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace;
	  font-size: var(--font-size-sm);
	  background-color: var(--color-neutral-100);
	  color: var(--color-neutral-800);
	  padding: 0.125rem 0.25rem;
	  border-radius: var(--radius-sm);
	}

	pre {
	  font-family: ui-monospace, SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace;
	  background-color: var(--color-neutral-100);
	  color: var(--color-neutral-800);
	  padding: var(--spacing-md);
	  border-radius: var(--radius-md);
	  overflow-x: auto;
	  margin-bottom: var(--spacing-md);
	}

	pre code {
	  background: none;
	  padding: 0;
	}

	blockquote {
	  border-left: 4px solid var(--color-primary-500);
	  padding-left: var(--spacing-md);
	  margin: var(--spacing-lg) 0;
	  color: var(--color-text-secondary);
	  font-style: italic;
	}

	hr {
	  border: none;
	  height: 1px;
	  background-color: var(--color-border);
	  margin: var(--spacing-xl) 0;
	}

	ul, ol {
	  margin-bottom: var(--spacing-md);
	  padding-left: var(--spacing-lg);
	  list-style: initial;
	}

	ol {
	  list-style: decimal;
	}

	li {
	  margin-bottom: var(--spacing-xs);
	  line-height: var(--line-height-relaxed);
	  color: var(--color-text-secondary);
	}
  }
=== ./src/assets/styles/base/reset.css ===
/* ===== BASE/RESET.CSS ===== */
@tailwind base {
	*,
	*::before,
	*::after {
	  box-sizing: border-box;
	}

	* {
	  margin: 0;
	  padding: 0;
	}

	html {
	  scroll-behavior: smooth;
	  -webkit-text-size-adjust: 100%;
	  tab-size: 4;
	}

	body {
	  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
	  line-height: var(--line-height-normal);
	  -webkit-font-smoothing: antialiased;
	  -moz-osx-font-smoothing: grayscale;
	  background-color: var(--color-bg-primary);
	  color: var(--color-text-primary);
	}

	img,
	picture,
	video,
	canvas,
	svg {
	  display: block;
	  max-width: 100%;
	  height: auto;
	}

	input,
	button,
	textarea,
	select {
	  font: inherit;
	}

	button {
	  cursor: pointer;
	}

	button:disabled {
	  cursor: not-allowed;
	}

	a {
	  color: inherit;
	  text-decoration: inherit;
	}

	table {
	  border-collapse: collapse;
	  border-spacing: 0;
	}

	ul,
	ol {
	  list-style: none;
	}
  }
=== ./src/assets/styles/base/variables.css ===
/* ===== BASE/VARIABLES.CSS ===== */
@tailwind base {
	:root {
	  /* === BRAND COLORS === */
	  --color-primary-50: #eff6ff;
	  --color-primary-100: #dbeafe;
	  --color-primary-200: #bfdbfe;
	  --color-primary-300: #93c5fd;
	  --color-primary-400: #60a5fa;
	  --color-primary-500: #3b82f6;
	  --color-primary-600: #2563eb;
	  --color-primary-700: #1d4ed8;
	  --color-primary-800: #1e40af;
	  --color-primary-900: #1e3a8a;

	  /* === SECONDARY COLORS === */
	  --color-secondary-50: #f8fafc;
	  --color-secondary-100: #f1f5f9;
	  --color-secondary-200: #e2e8f0;
	  --color-secondary-300: #cbd5e1;
	  --color-secondary-400: #94a3b8;
	  --color-secondary-500: #64748b;
	  --color-secondary-600: #475569;
	  --color-secondary-700: #334155;
	  --color-secondary-800: #1e293b;
	  --color-secondary-900: #0f172a;

	  /* === ACCENT COLORS === */
	  --color-accent-50: #fdf4ff;
	  --color-accent-100: #fae8ff;
	  --color-accent-200: #f5d0fe;
	  --color-accent-300: #f0abfc;
	  --color-accent-400: #e879f9;
	  --color-accent-500: #d946ef;
	  --color-accent-600: #c026d3;
	  --color-accent-700: #a21caf;
	  --color-accent-800: #86198f;
	  --color-accent-900: #701a75;

	  /* === STATUS COLORS === */
	  --color-success-50: #f0fdf4;
	  --color-success-100: #dcfce7;
	  --color-success-200: #bbf7d0;
	  --color-success-300: #86efac;
	  --color-success-400: #4ade80;
	  --color-success-500: #22c55e;
	  --color-success-600: #16a34a;
	  --color-success-700: #15803d;
	  --color-success-800: #166534;
	  --color-success-900: #14532d;

	  --color-warning-50: #fffbeb;
	  --color-warning-100: #fef3c7;
	  --color-warning-200: #fde68a;
	  --color-warning-300: #fcd34d;
	  --color-warning-400: #fbbf24;
	  --color-warning-500: #f59e0b;
	  --color-warning-600: #d97706;
	  --color-warning-700: #b45309;
	  --color-warning-800: #92400e;
	  --color-warning-900: #78350f;

	  --color-error-50: #fef2f2;
	  --color-error-100: #fee2e2;
	  --color-error-200: #fecaca;
	  --color-error-300: #fca5a5;
	  --color-error-400: #f87171;
	  --color-error-500: #ef4444;
	  --color-error-600: #dc2626;
	  --color-error-700: #b91c1c;
	  --color-error-800: #991b1b;
	  --color-error-900: #7f1d1d;

	  /* === NEUTRAL COLORS === */
	  --color-neutral-50: #fafafa;
	  --color-neutral-100: #f5f5f5;
	  --color-neutral-200: #e5e5e5;
	  --color-neutral-300: #d4d4d4;
	  --color-neutral-400: #a3a3a3;
	  --color-neutral-500: #737373;
	  --color-neutral-600: #525252;
	  --color-neutral-700: #404040;
	  --color-neutral-800: #262626;
	  --color-neutral-900: #171717;

	  /* === DESIGN TOKENS === */
	  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
	  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
	  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
	  --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
	  --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);

	  --radius-sm: 0.375rem;
	  --radius-md: 0.5rem;
	  --radius-lg: 0.75rem;
	  --radius-xl: 1rem;
	  --radius-2xl: 1.5rem;
	  --radius-full: 9999px;

	  --transition-fast: 150ms;
	  --transition-normal: 200ms;
	  --transition-slow: 300ms;
	  --transition-slower: 500ms;

	  --spacing-xs: 0.25rem;
	  --spacing-sm: 0.5rem;
	  --spacing-md: 1rem;
	  --spacing-lg: 1.5rem;
	  --spacing-xl: 2rem;
	  --spacing-2xl: 3rem;
	  --spacing-3xl: 4rem;

	  /* === TYPOGRAPHY === */
	  --font-size-xs: 0.75rem;
	  --font-size-sm: 0.875rem;
	  --font-size-base: 1rem;
	  --font-size-lg: 1.125rem;
	  --font-size-xl: 1.25rem;
	  --font-size-2xl: 1.5rem;
	  --font-size-3xl: 1.875rem;
	  --font-size-4xl: 2.25rem;
	  --font-size-5xl: 3rem;
	  --font-size-6xl: 3.75rem;

	  --line-height-tight: 1.25;
	  --line-height-snug: 1.375;
	  --line-height-normal: 1.5;
	  --line-height-relaxed: 1.625;
	  --line-height-loose: 2;

	  --font-weight-light: 300;
	  --font-weight-normal: 400;
	  --font-weight-medium: 500;
	  --font-weight-semibold: 600;
	  --font-weight-bold: 700;
	  --font-weight-extrabold: 800;
	}

	/* Dark mode variables */
	@media (prefers-color-scheme: dark) {
	  :root {
		--color-bg-primary: var(--color-neutral-900);
		--color-bg-secondary: var(--color-neutral-800);
		--color-text-primary: var(--color-neutral-100);
		--color-text-secondary: var(--color-neutral-300);
		--color-border: var(--color-neutral-700);
	  }
	}

	/* Light mode variables */
	@media (prefers-color-scheme: light) {
	  :root {
		--color-bg-primary: var(--color-neutral-50);
		--color-bg-secondary: var(--color-neutral-100);
		--color-text-primary: var(--color-neutral-900);
		--color-text-secondary: var(--color-neutral-600);
		--color-border: var(--color-neutral-200);
	  }
	}
  }
=== ./src/assets/styles/vendor/overrides.css ===
