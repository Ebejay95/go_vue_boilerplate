# Development Dockerfile - Korrigierte Proto-Behandlung
FROM node:18-alpine

# Install tools needed for development
RUN apk add --no-cache protobuf-dev curl unzip bash inotify-tools

# Install protoc-gen-grpc-web
RUN curl -sSL https://github.com/grpc/grpc-web/releases/download/1.4.2/protoc-gen-grpc-web-1.4.2-linux-x86_64 \
	-o /usr/local/bin/protoc-gen-grpc-web && \
	chmod +x /usr/local/bin/protoc-gen-grpc-web

WORKDIR /app

# Copy package files and install dependencies
COPY frontend/package*.json ./
RUN npm install
RUN npm install -g grpc-tools@latest

# Copy config files
COPY frontend/vue.config.dev.js ./vue.config.js
COPY frontend/tailwind.config.js ./

# Copy proto source files to a DIFFERENT location first
COPY proto /proto-source

# Copy source files FIRST (this is important for layer order)
COPY frontend/src ./src
COPY frontend/public ./public

# NOW generate proto files AFTER src is copied
# This prevents volume mounts from overwriting generated files
RUN echo "=== Creating proto directory ===" && \
	mkdir -p src/proto

RUN echo "=== Generating JavaScript protobuf files ===" && \
	npx grpc_tools_node_protoc \
	--js_out=import_style=commonjs,binary:src/proto \
	--proto_path=/proto-source \
	/proto-source/*.proto && \
	echo "✅ JavaScript proto files generated"

RUN echo "=== Generating gRPC-Web files ===" && \
	npx grpc_tools_node_protoc \
	--grpc-web_out=import_style=commonjs,mode=grpcwebtext:src/proto \
	--proto_path=/proto-source \
	/proto-source/*.proto && \
	echo "✅ gRPC-Web proto files generated"

# Verify generated files exist
RUN echo "=== Final verification ===" && \
	ls -la src/proto/ && \
	test -f src/proto/user_pb.js && echo "✅ user_pb.js: $(wc -l < src/proto/user_pb.js) lines" || echo "❌ user_pb.js missing" && \
	test -f src/proto/user_grpc_web_pb.js && echo "✅ user_grpc_web_pb.js: $(wc -l < src/proto/user_grpc_web_pb.js) lines" || echo "❌ user_grpc_web_pb.js missing"

# Create user for security
RUN addgroup -g 1001 -S nodejs && \
	adduser -S vuejs -u 1001

# Set proper ownership including proto files
RUN chown -R vuejs:nodejs /app

# Switch to non-root user
USER vuejs

# Environment variables for hot reload
ENV NODE_ENV=development
ENV CHOKIDAR_USEPOLLING=true
ENV CHOKIDAR_INTERVAL=1000
ENV WATCHPACK_POLLING=true

EXPOSE ${FRONTEND_PORT}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
	CMD curl -f ${BASE_URL} || exit 1

# Default command
CMD ["npm", "run", "serve", "--", "--host", "0.0.0.0", "--port", "${FRONTEND_PORT}"]
